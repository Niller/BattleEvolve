//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Sources.Components.Game.TestComponent sourcesComponentsGameTest { get { return (Sources.Components.Game.TestComponent)GetComponent(GameComponentsLookup.SourcesComponentsGameTest); } }
    public bool hasSourcesComponentsGameTest { get { return HasComponent(GameComponentsLookup.SourcesComponentsGameTest); } }

    public void AddSourcesComponentsGameTest(int newT) {
        var index = GameComponentsLookup.SourcesComponentsGameTest;
        var component = CreateComponent<Sources.Components.Game.TestComponent>(index);
        component.t = newT;
        AddComponent(index, component);
    }

    public void ReplaceSourcesComponentsGameTest(int newT) {
        var index = GameComponentsLookup.SourcesComponentsGameTest;
        var component = CreateComponent<Sources.Components.Game.TestComponent>(index);
        component.t = newT;
        ReplaceComponent(index, component);
    }

    public void RemoveSourcesComponentsGameTest() {
        RemoveComponent(GameComponentsLookup.SourcesComponentsGameTest);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSourcesComponentsGameTest;

    public static Entitas.IMatcher<GameEntity> SourcesComponentsGameTest {
        get {
            if (_matcherSourcesComponentsGameTest == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SourcesComponentsGameTest);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSourcesComponentsGameTest = matcher;
            }

            return _matcherSourcesComponentsGameTest;
        }
    }
}
